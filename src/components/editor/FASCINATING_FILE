Добрый вечер, Александр!
В данном письме я бы хотела рассказать вам какой массив данных вы будете получать.
Время идет, работа движется, и, возможно, в будущем будут внесены какие-то дополнительные детали.
Но расскажу вам, что мы имеем на текущий момент.

Моя прелестная часть программы будет выплевывать вам список, элементы которого реализуют интерфейс IBlock,
а именно:
    const blocks: Array<IBlock>

IBlock - это интерфейс, предлагающий к реализации следующие методы:

export interface IBlock {
    getId(): string, - возвращает уникальный идентификатор блока

    getTop(): number, - возвращает верхнюю координату блока
    setTop(top: number): void, - устанавливает верхнюю координату блока

    getLeft(): number, - возвращает левую координату блока
    setLeft(left: number): void, - устанавливает левую координату блока

    getTypeBlock(): string, - возвращает тип блока

    render(): JSX.Element - возвращает элемент для отрисовки блока

    getParentId(): string - возвращает идентификатор предыдущего в последовательности блока
    setParentId(parentId: string): void - устанавливает

    getNeighborId(): string - возвращает идентификатор следующего после текущего блока в последовательности
    setNeighborId(neighbor: string): void - устанавливает

    getInnerLevel(): number - возвращает уровень вложенности блока
    setInnerLevel(innerLevel: number): void - устанавливает

    getStyleBlock(): CSSProperties - возвращает стиль блока


------      ВНИМАНИЕ, ЕЩЕ НЕ РЕАЛИЗОВАНО!!!! --------
    getParameterId(): string - возвращает идентификатор строки параметров, это будет отдельная сущность
    setParameterId(parameterId: string): void - устанавилвает

    getCommentId(): string - возвращает ид комментария к блоку, это будет отдельная сущность (наверное, хз)
    setCommentId(commentId: string): void - устанавливает

}

Методом getType() вы будете получать тип блока, представленный в виде строки.
У меня он хранится в виде перечисления:

 export const BlockTypes = {
     CONDITION: 'condition',
     LOOP: 'loop',
     BLOCK: 'block'
 }

 То есть, вы будете получать то, что в кавычках. Это все имеющиеся у меня пока типы блоков, вы можете внести
 остальные, чтобы я просто использовала далее эти строки.