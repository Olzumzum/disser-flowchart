[{"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js":"1","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js":"2","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx":"3","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\CustomDragLayer.tsx":"4","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx":"5","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx":"6","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\snapToGrid.ts":"7","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts":"8","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockDragPreview.tsx":"9","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\DraggableBlock.tsx":"10","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\Block.tsx":"11","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\ConditionBlock.tsx":"12","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockTypes.ts":"13"},{"size":376,"mtime":1613302676500,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1415,"mtime":1613302676487,"results":"17","hashOfConfig":"15"},{"size":2096,"mtime":1613302676495,"results":"18","hashOfConfig":"15"},{"size":3792,"mtime":1613470237266,"results":"19","hashOfConfig":"15"},{"size":1095,"mtime":1613470113721,"results":"20","hashOfConfig":"15"},{"size":196,"mtime":1613302676499,"results":"21","hashOfConfig":"15"},{"size":50,"mtime":1613302676535,"results":"22","hashOfConfig":"15"},{"size":861,"mtime":1613302676491,"results":"23","hashOfConfig":"15"},{"size":1890,"mtime":1613470055976,"results":"24","hashOfConfig":"15"},{"size":636,"mtime":1613468454413,"results":"25","hashOfConfig":"15"},{"size":681,"mtime":1613469199792,"results":"26","hashOfConfig":"15"},{"size":79,"mtime":1613470055992,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"jcib30",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js",[],["58","59"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx",["60","61"],"import {FC, useCallback, useState} from \"react\";\r\nimport {CustomDragLayer} from \"./panel/CustomDragLayer\";\r\nimport {EditPanel} from \"./panel/EditPanel\"\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {ComponentPanel} from \"./panel/ComponentPanel\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\n\r\nexport const EditorApp: FC = () => {\r\n    const [snapToGridAfterDrop, setSnapToGridAfterDrop] = useState(false)\r\n    const [snapToGridWhileDragging, setSnapToGridWhileDragging] = useState(false)\r\n\r\n    const handleSnapToGridAfterDropChange = useCallback(() => {\r\n        setSnapToGridAfterDrop(!snapToGridAfterDrop)\r\n    }, [snapToGridAfterDrop])\r\n\r\n    const handleSnapToGridWhileDraggingChange = useCallback(() => {\r\n        setSnapToGridWhileDragging(!snapToGridWhileDragging)\r\n    }, [snapToGridWhileDragging])\r\n\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <Container fluid>\r\n                {/* <Row>*/}\r\n                {/*     <Toolbar/>*/}\r\n                {/*</Row>*/}\r\n                <Row style={{\r\n                    height: 300\r\n                }}>\r\n                    <ComponentPanel/>\r\n                    <EditPanel snapToGrid={snapToGridAfterDrop}/>\r\n                    <CustomDragLayer snapToGrid={snapToGridWhileDragging}/>\r\n                </Row>\r\n            </Container>\r\n        </DndProvider>\r\n    )\r\n\r\n}",["62","63"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\CustomDragLayer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx",["64"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx",["65","66","67","68","69","70","71","72","73","74"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\snapToGrid.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockDragPreview.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\DraggableBlock.tsx",["75","76"],"import {CSSProperties, FC, useEffect} from \"react\";\r\nimport {DragSourceMonitor, useDrag, useDrop} from \"react-dnd\";\r\nimport {ItemTypes} from \"../ItemTypes\";\r\nimport {getEmptyImage} from \"react-dnd-html5-backend\";\r\nimport {Block} from \"./Block\";\r\nimport {ConditionBlock} from \"./ConditionBlock\";\r\nimport {BlockTypes} from \"./BlockTypes\";\r\n\r\nfunction getStyles(\r\n    left: number,\r\n    top: number,\r\n    isDragging: boolean\r\n): CSSProperties {\r\n    const transform = `translate3d(${left}px, ${top}px, 0)`\r\n    return {\r\n        position: 'absolute',\r\n        transform,\r\n        WebkitTransform: transform,\r\n        // IE fallback: hide the real node using CSS when dragging\r\n        // because IE will ignore our custom \"empty image\" drag preview.\r\n        opacity: isDragging ? 0 : 1,\r\n        height: isDragging ? 0 : '',\r\n    }\r\n}\r\n\r\nexport interface DraggableBlockProps{\r\n    id: string\r\n    title: string\r\n    left: number\r\n    top: number\r\n    typeBlock: string\r\n}\r\n\r\nfunction selectTypeBlock(typeBlock: string, title: string){\r\n    console.log(\"type block \" + typeBlock)\r\n    switch (typeBlock){\r\n        case BlockTypes.CONDITION: return <ConditionBlock title={title}/>\r\n        case BlockTypes.BLOCK: return <Block title={title}/>\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const DraggableBlock: FC<DraggableBlockProps> = (props) => {\r\n    const { id, title, left, top, typeBlock } = props\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: { type: ItemTypes.BLOCK, id, left, top, title, typeBlock},\r\n        collect: (monitor: DragSourceMonitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), {captureDraggingState: true})\r\n    }, [])\r\n\r\n    return(\r\n        <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n            {selectTypeBlock(typeBlock, title)}\r\n        </div>\r\n    )\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\Block.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\ConditionBlock.tsx",["77","78"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockTypes.ts",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":13,"column":11,"nodeType":"85","messageId":"86","endLine":13,"endColumn":42},{"ruleId":"83","severity":1,"message":"87","line":17,"column":11,"nodeType":"85","messageId":"86","endLine":17,"endColumn":46},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"88","severity":1,"message":"89","line":58,"column":51,"nodeType":"90","messageId":"91","endLine":58,"endColumn":53},{"ruleId":"83","severity":1,"message":"92","line":1,"column":9,"nodeType":"85","messageId":"86","endLine":1,"endColumn":12},{"ruleId":"83","severity":1,"message":"93","line":2,"column":9,"nodeType":"85","messageId":"86","endLine":2,"endColumn":23},{"ruleId":"83","severity":1,"message":"94","line":3,"column":24,"nodeType":"85","messageId":"86","endLine":3,"endColumn":35},{"ruleId":"83","severity":1,"message":"95","line":3,"column":37,"nodeType":"85","messageId":"86","endLine":3,"endColumn":45},{"ruleId":"83","severity":1,"message":"96","line":4,"column":9,"nodeType":"85","messageId":"86","endLine":4,"endColumn":17},{"ruleId":"83","severity":1,"message":"97","line":5,"column":9,"nodeType":"85","messageId":"86","endLine":5,"endColumn":16},{"ruleId":"83","severity":1,"message":"98","line":6,"column":9,"nodeType":"85","messageId":"86","endLine":6,"endColumn":18},{"ruleId":"83","severity":1,"message":"99","line":7,"column":9,"nodeType":"85","messageId":"86","endLine":7,"endColumn":17},{"ruleId":"83","severity":1,"message":"100","line":8,"column":23,"nodeType":"85","messageId":"86","endLine":8,"endColumn":35},{"ruleId":"83","severity":1,"message":"101","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":14},{"ruleId":"83","severity":1,"message":"97","line":2,"column":37,"nodeType":"85","messageId":"86","endLine":2,"endColumn":44},{"ruleId":"102","severity":1,"message":"103","line":56,"column":8,"nodeType":"104","endLine":56,"endColumn":10,"suggestions":"105"},{"ruleId":"83","severity":1,"message":"106","line":1,"column":9,"nodeType":"85","messageId":"86","endLine":1,"endColumn":14},{"ruleId":"83","severity":1,"message":"107","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":27},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'handleSnapToGridAfterDropChange' is assigned a value but never used.","Identifier","unusedVar","'handleSnapToGridWhileDraggingChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Col' is defined but never used.","'DraggableBlock' is defined but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'BlockMap' is defined but never used.","'useDrop' is defined but never used.","'ItemTypes' is defined but never used.","'DragItem' is defined but never used.","'doSnapToGrid' is defined but never used.","'update' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'Block' is defined but never used.","'BlockParent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [preview]",{"range":"113","text":"114"},[1686,1688],"[preview]"]