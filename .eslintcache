[{"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js":"1","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js":"2","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx":"3","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx":"4","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx":"5","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts":"6","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\CustomDragLayer.tsx":"7","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\snapToGrid.ts":"8","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockTypes.ts":"9","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\DraggableBlock.tsx":"10","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockDragPreview.tsx":"11","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\CreatorBlock.tsx":"12","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\SubroutineBlockEx.tsx":"13","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\ConditionBlock.tsx":"14","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\ParentBlock.tsx":"15"},{"size":376,"mtime":1613302676500,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1415,"mtime":1616745701548,"results":"19","hashOfConfig":"17"},{"size":3792,"mtime":1616745701565,"results":"20","hashOfConfig":"17"},{"size":1170,"mtime":1616745701563,"results":"21","hashOfConfig":"17"},{"size":50,"mtime":1613302676535,"results":"22","hashOfConfig":"17"},{"size":2096,"mtime":1616745701564,"results":"23","hashOfConfig":"17"},{"size":196,"mtime":1616745701566,"results":"24","hashOfConfig":"17"},{"size":394,"mtime":1616745701551,"results":"25","hashOfConfig":"17"},{"size":1712,"mtime":1616745701556,"results":"26","hashOfConfig":"17"},{"size":835,"mtime":1616745701550,"results":"27","hashOfConfig":"17"},{"size":660,"mtime":1616745701554,"results":"28","hashOfConfig":"17"},{"size":803,"mtime":1616745701560,"results":"29","hashOfConfig":"17"},{"size":817,"mtime":1616745701553,"results":"30","hashOfConfig":"17"},{"size":1052,"mtime":1616745701559,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"jcib30",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js",[],["66","67"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx",["68","69"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx",["70","71","72","73","74","75","76","77"],"import {CSSProperties, FC, useCallback, useEffect, useState} from \"react\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport {ItemTypes} from \"../ItemTypes\";\r\nimport {DragItem} from \"../dnd/DragItem\";\r\nimport {snapToGrid as doSnapToGrid} from '../dnd/snapToGrid'\r\nimport update from \"immutability-helper\";\r\n\r\nimport {IBlock} from \"../blocks/primitives/IBlock\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {BlockMap1, RendrerManager} from \"../dnd/RendrerManager\";\r\nimport {render} from \"react-dom\";\r\nimport {blocksTypedSelector} from \"../../hooks/blocksTypedSelector\";\r\nimport {useActions} from \"../../hooks/blockActions\";\r\nimport {changeBlocks} from \"../../store/action-creators/blocks\";\r\n\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"right\",\r\n    width: \"79%\",\r\n    height: 400,\r\n    border: '1px solid black',\r\n    backgroundColor: 'aqua'\r\n    // position: 'relative',\r\n}\r\n\r\n\r\nexport interface EditPanelProps {\r\n    snapToGrid: boolean\r\n}\r\n\r\nconst renderManager = new RendrerManager()\r\n\r\n\r\nfunction getWidthComponentPanel(): number | null {\r\n    const element = document.getElementById(\"component_panel\")\r\n\r\n    if (element != null) {\r\n        return Number(element.offsetWidth)\r\n    } else\r\n        return null\r\n}\r\n\r\n//генерация уникального id\r\nexport function generateId(): string {\r\n    return `f${(~~(Math.random() * 1e8)).toString(16)}`\r\n}\r\n\r\n// let arBlock: Array<IBlock> = new Array<IBlock>()\r\n\r\nconst creator: IBlockFactory = new CreatorBlock()\r\n\r\n// const originalBlocks = creator.getOriginBlock()\r\nlet fd: Array<BlockMap1> = new Array<BlockMap1>()\r\n\r\nexport const EditPanel: FC<EditPanelProps> = ({snapToGrid}) => {\r\n    const {originBlocks, blocks, loading, error} = blocksTypedSelector(state => state.blocks)\r\n    let fd: Array<BlockMap1> = new Array<BlockMap1>()\r\n    const {fetchBlocks, addBlocks, changeBlocks} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchBlocks()\r\n    }, [])\r\n\r\n\r\n\r\n    const moveBlock = useCallback(\r\n        (id: string, left: number, top: number) => {\r\n\r\n            let flag = false\r\n            //проверка - блок добавляется с панели перечисления\r\n            // возможных компонентов (Component Panel) или\r\n            //пепетаскивается существующий на панели редактирования блок\r\n           if (blocks.length === 0 ) flag = true\r\n            else blocks.forEach(item => {\r\n                if(item.getId()?.localeCompare(id)){\r\n                    console.log(\"flag \" + id + \" \" + item.getId())\r\n                    flag = true\r\n                }\r\n           })\r\n\r\n\r\n            if (flag) {\r\n                //создаем новый id для добавляемого блока\r\n                console.log(\"реакция\")\r\n                let idNew: string = generateId()\r\n                addBlocks(creator.createBlock(\r\n                    originBlocks[Number(id)].getTypeBlock(),\r\n                    left - getWidthComponentPanel()!!,\r\n                    top,\r\n                    idNew\r\n                )!!)\r\n            } else {\r\n                //перетаскиваем блок\r\n                changeBlocks(id, left, top)\r\n            }\r\n        },\r\n        [blocks],\r\n\r\n    )\r\n\r\n    const [, drop] = useDrop({\r\n        accept: ItemTypes.BLOCK,\r\n        drop(item: DragItem, monitor) {\r\n            const delta = monitor.getDifferenceFromInitialOffset() as {\r\n                x: number\r\n                y: number\r\n            }\r\n\r\n            let left = Math.round(item.left + delta.x)\r\n            let top = Math.round(item.top + delta.y)\r\n\r\n            if (snapToGrid) {\r\n                ;[left, top] = doSnapToGrid(left, top)\r\n            }\r\n            moveBlock(item.id, left, top)\r\n            return undefined\r\n        },\r\n    })\r\n\r\n    if(loading){\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n\r\n    if(error){\r\n        return <h1>{error}</h1>\r\n    }\r\n\r\n    fd = renderManager.convert(blocks)\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div ref={drop} style={styles}>\r\n                {Object.keys(fd).map((id) => renderManager.renders(fd[Number(id)], id))}\r\n            </div>\r\n        </div>\r\n    )\r\n}",["78","79"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx",["80","81","82","83","84","85"],"import {CSSProperties, useEffect} from \"react\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {BlockMap1, RendrerManager} from \"../dnd/RendrerManager\";\r\nimport {blockReducer} from \"../../store/reducers/blockReducer\";\r\nimport {blocksTypedSelector} from \"../../hooks/blocksTypedSelector\";\r\nimport {useActions} from \"../../hooks/blockActions\";\r\nimport {fetchBlocks, fetchOriginalBlocks} from \"../../store/action-creators/blocks\";\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"left\",\r\n    height: 400,\r\n    width: \"20%\",\r\n    backgroundColor: 'darkgray',\r\n}\r\n\r\nconst renderManager = new RendrerManager()\r\n\r\nexport const ComponentPanel = () => {\r\n    const {originBlocks, loading, error} = blocksTypedSelector(state => state.blocks)\r\n    let fd: Array<BlockMap1> = renderManager.convert(originBlocks)\r\n    const {fetchOriginalBlocks} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchOriginalBlocks()\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n\r\n    if(error){\r\n        return <h1>{error}</h1>\r\n    }\r\n\r\n    return (\r\n        <div id={\"component_panel\"} style={styles}>\r\n            {Object.keys(fd).map((id) => renderManager.renders(fd[Number(id)], id))}\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\CustomDragLayer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\snapToGrid.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\DraggableBlock.tsx",["86"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockDragPreview.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\CreatorBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\SubroutineBlockEx.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\ConditionBlock.tsx",["87"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\ParentBlock.tsx",["88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":13,"column":11,"nodeType":"95","messageId":"96","endLine":13,"endColumn":42},{"ruleId":"93","severity":1,"message":"97","line":17,"column":11,"nodeType":"95","messageId":"96","endLine":17,"endColumn":46},{"ruleId":"93","severity":1,"message":"98","line":1,"column":52,"nodeType":"95","messageId":"96","endLine":1,"endColumn":60},{"ruleId":"93","severity":1,"message":"99","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":14},{"ruleId":"93","severity":1,"message":"100","line":8,"column":9,"nodeType":"95","messageId":"96","endLine":8,"endColumn":15},{"ruleId":"93","severity":1,"message":"101","line":12,"column":9,"nodeType":"95","messageId":"96","endLine":12,"endColumn":15},{"ruleId":"93","severity":1,"message":"102","line":15,"column":9,"nodeType":"95","messageId":"96","endLine":15,"endColumn":21},{"ruleId":"93","severity":1,"message":"103","line":55,"column":5,"nodeType":"95","messageId":"96","endLine":55,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":64,"column":8,"nodeType":"106","endLine":64,"endColumn":10,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":99,"column":9,"nodeType":"106","endLine":99,"endColumn":17,"suggestions":"109"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"110","line":2,"column":9,"nodeType":"95","messageId":"96","endLine":2,"endColumn":22},{"ruleId":"93","severity":1,"message":"111","line":3,"column":9,"nodeType":"95","messageId":"96","endLine":3,"endColumn":21},{"ruleId":"93","severity":1,"message":"112","line":5,"column":9,"nodeType":"95","messageId":"96","endLine":5,"endColumn":21},{"ruleId":"93","severity":1,"message":"113","line":8,"column":9,"nodeType":"95","messageId":"96","endLine":8,"endColumn":20},{"ruleId":"93","severity":1,"message":"114","line":8,"column":22,"nodeType":"95","messageId":"96","endLine":8,"endColumn":41},{"ruleId":"104","severity":1,"message":"115","line":28,"column":8,"nodeType":"106","endLine":28,"endColumn":10,"suggestions":"116"},{"ruleId":"104","severity":1,"message":"117","line":50,"column":8,"nodeType":"106","endLine":50,"endColumn":10,"suggestions":"118"},{"ruleId":"93","severity":1,"message":"98","line":2,"column":28,"nodeType":"95","messageId":"96","endLine":2,"endColumn":36},{"ruleId":"93","severity":1,"message":"119","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"@typescript-eslint/no-unused-vars","'handleSnapToGridAfterDropChange' is assigned a value but never used.","Identifier","unusedVar","'handleSnapToGridWhileDraggingChange' is assigned a value but never used.","'useState' is defined but never used.","'update' is defined but never used.","'IBlock' is defined but never used.","'render' is defined but never used.","'changeBlocks' is defined but never used.","'fd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBlocks'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useCallback has missing dependencies: 'addBlocks', 'changeBlocks', and 'originBlocks'. Either include them or remove the dependency array.",["123"],"'IBlockFactory' is defined but never used.","'CreatorBlock' is defined but never used.","'blockReducer' is defined but never used.","'fetchBlocks' is defined but never used.","'fetchOriginalBlocks' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchBlocks' and 'fetchOriginalBlocks'. Either include them or remove the dependency array.",["124"],"React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.",["125"],"'blockImage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [fetchBlocks]",{"range":"134","text":"135"},"Update the dependencies array to be: [addBlocks, blocks, changeBlocks, originBlocks]",{"range":"136","text":"137"},"Update the dependencies array to be: [fetchBlocks, fetchOriginalBlocks]",{"range":"138","text":"139"},"Update the dependencies array to be: [preview]",{"range":"140","text":"141"},[2002,2004],"[fetchBlocks]",[3175,3183],"[addBlocks, blocks, changeBlocks, originBlocks]",[1050,1052],"[fetchBlocks, fetchOriginalBlocks]",[1551,1553],"[preview]"]