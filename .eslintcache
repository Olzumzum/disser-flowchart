[{"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js":"1","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js":"2","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx":"3","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx":"4","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx":"5","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts":"6","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\CustomDragLayer.tsx":"7","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\index.ts":"8","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\snapToGrid.ts":"9","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\RendrerManager.tsx":"10","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\BlockDragPreview.tsx":"11","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\hooks\\blockActions.tsx":"12","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\hooks\\blocksTypedSelector.tsx":"13","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\blocks.tsx":"14","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\factory\\CreatorBlock.tsx":"15","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\index.ts":"16","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\DraggableBlock.tsx":"17","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\assets\\errorMessadges.tsx":"18","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\ConditionBlock.tsx":"19","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\SubroutineBlockEx.tsx":"20","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\index.ts":"21","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\BlockTypes.ts":"22","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\ParentBlock.tsx":"23","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\blockReducer.tsx":"24","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\actions.tsx":"25","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\connections\\ConnectionCreator.tsx":"26","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\clickOnBlocks.ts":"27"},{"size":376,"mtime":1613302676500,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1600,"mtime":1616745806332,"results":"31","hashOfConfig":"29"},{"size":4253,"mtime":1617293124378,"results":"32","hashOfConfig":"29"},{"size":1341,"mtime":1616745806347,"results":"33","hashOfConfig":"29"},{"size":50,"mtime":1613302676535,"results":"34","hashOfConfig":"29"},{"size":2114,"mtime":1616745806343,"results":"35","hashOfConfig":"29"},{"size":199,"mtime":1616745806353,"results":"36","hashOfConfig":"29"},{"size":196,"mtime":1616745806346,"results":"37","hashOfConfig":"29"},{"size":1358,"mtime":1616747439249,"results":"38","hashOfConfig":"29"},{"size":955,"mtime":1616745806342,"results":"39","hashOfConfig":"29"},{"size":272,"mtime":1616745806349,"results":"40","hashOfConfig":"29"},{"size":195,"mtime":1616745806350,"results":"41","hashOfConfig":"29"},{"size":3790,"mtime":1617292187803,"results":"42","hashOfConfig":"29"},{"size":1213,"mtime":1616745806334,"results":"43","hashOfConfig":"29"},{"size":97,"mtime":1616745806352,"results":"44","hashOfConfig":"29"},{"size":1932,"mtime":1616745806345,"results":"45","hashOfConfig":"29"},{"size":366,"mtime":1616745806327,"results":"46","hashOfConfig":"29"},{"size":2194,"mtime":1616750038832,"results":"47","hashOfConfig":"29"},{"size":1758,"mtime":1616750279725,"results":"48","hashOfConfig":"29"},{"size":220,"mtime":1616745806354,"results":"49","hashOfConfig":"29"},{"size":394,"mtime":1616745806336,"results":"50","hashOfConfig":"29"},{"size":3756,"mtime":1617292768762,"results":"51","hashOfConfig":"29"},{"size":1167,"mtime":1617258938324,"results":"52","hashOfConfig":"29"},{"size":340,"mtime":1617258879328,"results":"53","hashOfConfig":"29"},{"size":740,"mtime":1617292082727,"results":"54","hashOfConfig":"29"},{"size":161,"mtime":1617292293035,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"jcib30",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js",[],["118","119"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx",["120","121"],"import {FC, useCallback, useState} from \"react\";\r\nimport {CustomDragLayer} from \"./dnd/CustomDragLayer\";\r\nimport {EditPanel} from \"./panel/EditPanel\"\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {ComponentPanel} from \"./panel/ComponentPanel\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"../store\";\r\n\r\n\r\nexport const EditorApp: FC = () => {\r\n\r\n    const [snapToGridAfterDrop, setSnapToGridAfterDrop] = useState(false)\r\n    const [snapToGridWhileDragging, setSnapToGridWhileDragging] = useState(false)\r\n\r\n    const handleSnapToGridAfterDropChange = useCallback(() => {\r\n        setSnapToGridAfterDrop(!snapToGridAfterDrop)\r\n    }, [snapToGridAfterDrop])\r\n\r\n    const handleSnapToGridWhileDraggingChange = useCallback(() => {\r\n        setSnapToGridWhileDragging(!snapToGridWhileDragging)\r\n    }, [snapToGridWhileDragging])\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <Container fluid>\r\n                    {/* <Row>*/}\r\n                    {/*     <Toolbar/>*/}\r\n                    {/*</Row>*/}\r\n                    <Row style={{\r\n                        height: 300\r\n                    }}>\r\n                        <ComponentPanel/>\r\n                        <EditPanel snapToGrid={snapToGridAfterDrop}/>\r\n                        <CustomDragLayer snapToGrid={snapToGridWhileDragging}/>\r\n                    </Row>\r\n                </Container>\r\n            </DndProvider>\r\n        </Provider>\r\n    )\r\n\r\n}",["122","123"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx",["124","125","126","127","128"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx",["129","130","131","132","133","134"],"import {CSSProperties, useEffect} from \"react\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {BlockMap1, RendrerManager} from \"../dnd/RendrerManager\";\r\nimport {blockReducer} from \"../../store/reducers/blockReducer\";\r\nimport {blocksTypedSelector} from \"../../hooks/blocksTypedSelector\";\r\nimport {useActions} from \"../../hooks/blockActions\";\r\nimport {fetchBlocks, fetchOriginalBlocks} from \"../../store/action-creators/blocks\";\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"left\",\r\n    height: 400,\r\n    width: \"20%\",\r\n    backgroundColor: 'darkgray',\r\n}\r\n\r\nconst renderManager = new RendrerManager()\r\n\r\nexport const ComponentPanel = () => {\r\n    const {originBlocks, loading, error} = blocksTypedSelector(state => state.blocks)\r\n    let fd: Array<BlockMap1> = renderManager.convert(originBlocks)\r\n    const {fetchOriginalBlocks} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchOriginalBlocks()\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n\r\n    if(error){\r\n        return <h1>{error}</h1>\r\n    }\r\n\r\n    return (\r\n        <div id={\"component_panel\"} style={styles}>\r\n            {Object.keys(fd).map((id) => renderManager.renders(fd[Number(id)], id))}\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\CustomDragLayer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\index.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\snapToGrid.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\RendrerManager.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\BlockDragPreview.tsx",["135"],"import {CSSProperties, FC, memo, useEffect, useState} from \"react\";\r\n\r\n/**\r\n * Рисует блок при dnd\r\n */\r\nconst styles: CSSProperties = {\r\n    display: 'inline-block',\r\n    transform: 'rotate(-7deg)',\r\n    WebkitTransform: 'rotate(-7deg)',\r\n}\r\n\r\nexport interface BlockDragPreviewProps {\r\n    title: string\r\n    typeBlock: string\r\n}\r\n\r\nexport const BlockDragPreview: FC<BlockDragPreviewProps> = memo(({title}, {typeBlock}) => {\r\n        const [tickTock, setTickTock] = useState(false)\r\n\r\n        useEffect(\r\n            function subscribeToIntervalTick() {\r\n                const interval = setInterval(() => setTickTock(!tickTock), 500)\r\n                return () => clearInterval(interval)\r\n            },\r\n            [tickTock]\r\n        )\r\n\r\n\r\n\r\n        return (\r\n            <div style={styles}>\r\n                {/*<SubroutineBlockEx title={typeBlock} yellow={tickTock} left={0} top={0}/>*/}\r\n            </div>\r\n        )\r\n    }\r\n)","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\hooks\\blockActions.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\hooks\\blocksTypedSelector.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\blocks.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\factory\\CreatorBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\index.ts",["136"],"import * as BlockActionCreator from './blocks'\r\n\r\nexport default {\r\n    ...BlockActionCreator,\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\DraggableBlock.tsx",["137"],"import {CSSProperties, FC, useEffect} from \"react\";\r\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\r\nimport {ItemTypes} from \"../ItemTypes\";\r\nimport {getEmptyImage} from \"react-dnd-html5-backend\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {IBlock} from \"../blocks/primitives/IBlock\";\r\n\r\nfunction getStyles(\r\n    left: number,\r\n    top: number,\r\n    isDragging: boolean\r\n): CSSProperties {\r\n    const transform = `translate3d(${left}px, ${top}px, 0)`\r\n    return {\r\n        position: 'absolute',\r\n        transform,\r\n        WebkitTransform: transform,\r\n        // IE fallback: hide the real node using CSS when dragging\r\n        // because IE will ignore our custom \"empty image\" drag preview.\r\n        opacity: isDragging ? 0 : 1,\r\n        height: isDragging ? 0 : '',\r\n    }\r\n}\r\n\r\nexport interface DraggableBlockProps {\r\n    id: string\r\n    title: string\r\n    left: number\r\n    top: number\r\n    typeBlock: string\r\n}\r\n\r\nfunction selectTypeBlock(\r\n    typeBlock: string, title: string, left: number, top: number, id: string\r\n): IBlock | undefined {\r\n    const blockFactory: IBlockFactory = new CreatorBlock()\r\n    return blockFactory.createBlock(typeBlock, left, top, id)\r\n}\r\n\r\nexport const DraggableBlock: FC<DraggableBlockProps> = (props) => {\r\n    const {left, top, title, typeBlock, id} = props\r\n\r\n    const [{isDragging}, drag, preview] = useDrag({\r\n        item: {type: ItemTypes.BLOCK, left, top, title, typeBlock, id},\r\n        collect: (monitor: DragSourceMonitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), {captureDraggingState: true})\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n            {selectTypeBlock(typeBlock, title, left, top, id)?.render()}\r\n        </div>\r\n    )\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\assets\\errorMessadges.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\ConditionBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\SubroutineBlockEx.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\index.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\BlockTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\ParentBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\blockReducer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\actions.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\connections\\ConnectionCreator.tsx",["138","139"],"import {IBlock} from \"../blocks/primitives/IBlock\";\r\nimport {blocksTypedSelector} from \"../../hooks/blocksTypedSelector\";\r\n\r\nexport const ConnectionCreator = (idOne: string, idTwo: string) => {\r\n    setNeighbors(idOne, idTwo)\r\n    console.log(\"связи созданы между \" + idOne + \" and \"+ idTwo)\r\n}\r\n\r\nconst setNeighbors = (idOne: string, idTwo: string) => {\r\n    // const {blocks} = blocksTypedSelector(state => state.blocks)\r\n\r\n    console.log(\"Конекшен криэтор\")\r\n    // blocks.forEach(item => {\r\n    //     if(item.getId()?.localeCompare(idOne))\r\n    //         item.setSubsequentNeighbor(idTwo)\r\n    //     if(item.getId()?.localeCompare(idTwo))\r\n    //         item.setPreviousNeighbor(idOne)\r\n    // })\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\clickOnBlocks.ts",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":17,"column":11,"nodeType":"146","messageId":"147","endLine":17,"endColumn":42},{"ruleId":"144","severity":1,"message":"148","line":21,"column":11,"nodeType":"146","messageId":"147","endLine":21,"endColumn":46},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"149","line":1,"column":52,"nodeType":"146","messageId":"147","endLine":1,"endColumn":60},{"ruleId":"144","severity":1,"message":"150","line":11,"column":9,"nodeType":"146","messageId":"147","endLine":11,"endColumn":21},{"ruleId":"144","severity":1,"message":"151","line":51,"column":5,"nodeType":"146","messageId":"147","endLine":51,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":60,"column":8,"nodeType":"154","endLine":60,"endColumn":10,"suggestions":"155"},{"ruleId":"152","severity":1,"message":"156","line":85,"column":9,"nodeType":"154","endLine":85,"endColumn":17,"suggestions":"157"},{"ruleId":"144","severity":1,"message":"158","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":22},{"ruleId":"144","severity":1,"message":"159","line":3,"column":9,"nodeType":"146","messageId":"147","endLine":3,"endColumn":21},{"ruleId":"144","severity":1,"message":"160","line":5,"column":9,"nodeType":"146","messageId":"147","endLine":5,"endColumn":21},{"ruleId":"144","severity":1,"message":"161","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":20},{"ruleId":"144","severity":1,"message":"162","line":8,"column":22,"nodeType":"146","messageId":"147","endLine":8,"endColumn":41},{"ruleId":"152","severity":1,"message":"163","line":28,"column":8,"nodeType":"154","endLine":28,"endColumn":10,"suggestions":"164"},{"ruleId":"144","severity":1,"message":"165","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":26},{"ruleId":"166","severity":1,"message":"167","line":3,"column":1,"nodeType":"168","endLine":5,"endColumn":2},{"ruleId":"152","severity":1,"message":"169","line":53,"column":8,"nodeType":"154","endLine":53,"endColumn":10,"suggestions":"170"},{"ruleId":"144","severity":1,"message":"171","line":1,"column":9,"nodeType":"146","messageId":"147","endLine":1,"endColumn":15},{"ruleId":"144","severity":1,"message":"172","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":28},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"@typescript-eslint/no-unused-vars","'handleSnapToGridAfterDropChange' is assigned a value but never used.","Identifier","unusedVar","'handleSnapToGridWhileDraggingChange' is assigned a value but never used.","'useState' is defined but never used.","'changeBlocks' is defined but never used.","'fd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBlocks'. Either include it or remove the dependency array.","ArrayExpression",["175"],"React Hook useCallback has missing dependencies: 'addBlocks', 'changeBlocks', and 'originBlocks'. Either include them or remove the dependency array.",["176"],"'IBlockFactory' is defined but never used.","'CreatorBlock' is defined but never used.","'blockReducer' is defined but never used.","'fetchBlocks' is defined but never used.","'fetchOriginalBlocks' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchBlocks' and 'fetchOriginalBlocks'. Either include them or remove the dependency array.",["177"],"'SubroutineBlockEx' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.",["178"],"'IBlock' is defined but never used.","'blocksTypedSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [fetchBlocks]",{"range":"187","text":"188"},"Update the dependencies array to be: [addBlocks, changeBlocks, originBlocks]",{"range":"189","text":"190"},"Update the dependencies array to be: [fetchBlocks, fetchOriginalBlocks]",{"range":"191","text":"192"},"Update the dependencies array to be: [preview]",{"range":"193","text":"194"},[1975,1977],"[fetchBlocks]",[2882,2890],"[addBlocks, changeBlocks, originBlocks]",[1050,1052],"[fetchBlocks, fetchOriginalBlocks]",[1744,1746],"[preview]"]