[{"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js":"1","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js":"2","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx":"3","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx":"4","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx":"5","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts":"6","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\SubroutineBlockEx.tsx":"7","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\BlockTypes.ts":"8","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\ParentBlock.tsx":"9","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\ConditionBlock.tsx":"10","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\factory\\originBlocks.tsx":"11","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\CustomDragLayer.tsx":"12","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\BlockDragPreview.tsx":"13","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\DraggableBlock.tsx":"14","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\snapToGrid.ts":"15","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\RendrerManager.tsx":"16","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\IBlock.tsx":"17","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\factory\\CreatorBlock.tsx":"18","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\index.ts":"19","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\blockReducer.tsx":"20","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\actions.tsx":"21","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\index.ts":"22","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\hooks\\blocksTypedSelector.tsx":"23","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\hooks\\blockActions.tsx":"24","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\index.ts":"25","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\blocks.tsx":"26","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\assets\\errorMessadges.tsx":"27"},{"size":376,"mtime":1613302676500,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1600,"mtime":1616412953674,"results":"31","hashOfConfig":"29"},{"size":4342,"mtime":1616745591931,"results":"32","hashOfConfig":"29"},{"size":1341,"mtime":1616588154446,"results":"33","hashOfConfig":"29"},{"size":50,"mtime":1613302676535,"results":"34","hashOfConfig":"29"},{"size":1514,"mtime":1616141467735,"results":"35","hashOfConfig":"29"},{"size":394,"mtime":1613818181909,"results":"36","hashOfConfig":"29"},{"size":2934,"mtime":1616142109195,"results":"37","hashOfConfig":"29"},{"size":1824,"mtime":1616143199965,"results":"38","hashOfConfig":"29"},{"size":326,"mtime":1614689031775,"results":"39","hashOfConfig":"29"},{"size":2114,"mtime":1615709573144,"results":"40","hashOfConfig":"29"},{"size":955,"mtime":1614691532612,"results":"41","hashOfConfig":"29"},{"size":1932,"mtime":1616141215043,"results":"42","hashOfConfig":"29"},{"size":196,"mtime":1613302676499,"results":"43","hashOfConfig":"29"},{"size":1575,"mtime":1616583688282,"results":"44","hashOfConfig":"29"},{"size":430,"mtime":1615804490244,"results":"45","hashOfConfig":"29"},{"size":1213,"mtime":1616578898329,"results":"46","hashOfConfig":"29"},{"size":199,"mtime":1616487666203,"results":"47","hashOfConfig":"29"},{"size":1061,"mtime":1616744374939,"results":"48","hashOfConfig":"29"},{"size":294,"mtime":1616589836578,"results":"49","hashOfConfig":"29"},{"size":220,"mtime":1616487511543,"results":"50","hashOfConfig":"29"},{"size":195,"mtime":1616578073693,"results":"51","hashOfConfig":"29"},{"size":272,"mtime":1616578052777,"results":"52","hashOfConfig":"29"},{"size":97,"mtime":1616487649467,"results":"53","hashOfConfig":"29"},{"size":3788,"mtime":1616745591924,"results":"54","hashOfConfig":"29"},{"size":366,"mtime":1616590429411,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"jcib30",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js",[],["119","120"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx",["121","122"],"import {FC, useCallback, useState} from \"react\";\r\nimport {CustomDragLayer} from \"./dnd/CustomDragLayer\";\r\nimport {EditPanel} from \"./panel/EditPanel\"\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {ComponentPanel} from \"./panel/ComponentPanel\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"../store\";\r\n\r\n\r\nexport const EditorApp: FC = () => {\r\n\r\n    const [snapToGridAfterDrop, setSnapToGridAfterDrop] = useState(false)\r\n    const [snapToGridWhileDragging, setSnapToGridWhileDragging] = useState(false)\r\n\r\n    const handleSnapToGridAfterDropChange = useCallback(() => {\r\n        setSnapToGridAfterDrop(!snapToGridAfterDrop)\r\n    }, [snapToGridAfterDrop])\r\n\r\n    const handleSnapToGridWhileDraggingChange = useCallback(() => {\r\n        setSnapToGridWhileDragging(!snapToGridWhileDragging)\r\n    }, [snapToGridWhileDragging])\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <Container fluid>\r\n                    {/* <Row>*/}\r\n                    {/*     <Toolbar/>*/}\r\n                    {/*</Row>*/}\r\n                    <Row style={{\r\n                        height: 300\r\n                    }}>\r\n                        <ComponentPanel/>\r\n                        <EditPanel snapToGrid={snapToGridAfterDrop}/>\r\n                        <CustomDragLayer snapToGrid={snapToGridWhileDragging}/>\r\n                    </Row>\r\n                </Container>\r\n            </DndProvider>\r\n        </Provider>\r\n    )\r\n\r\n}",["123","124"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx",["125","126","127","128","129","130","131","132"],"import {CSSProperties, FC, useCallback, useEffect, useState} from \"react\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport {ItemTypes} from \"../ItemTypes\";\r\nimport {DragItem} from \"../dnd/DragItem\";\r\nimport {snapToGrid as doSnapToGrid} from '../dnd/snapToGrid'\r\nimport update from \"immutability-helper\";\r\n\r\nimport {IBlock} from \"../blocks/primitives/IBlock\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {BlockMap1, RendrerManager} from \"../dnd/RendrerManager\";\r\nimport {render} from \"react-dom\";\r\nimport {blocksTypedSelector} from \"../../hooks/blocksTypedSelector\";\r\nimport {useActions} from \"../../hooks/blockActions\";\r\nimport {changeBlocks} from \"../../store/action-creators/blocks\";\r\n\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"right\",\r\n    width: \"79%\",\r\n    height: 400,\r\n    border: '1px solid black',\r\n    backgroundColor: 'aqua'\r\n    // position: 'relative',\r\n}\r\n\r\n\r\nexport interface EditPanelProps {\r\n    snapToGrid: boolean\r\n}\r\n\r\nconst renderManager = new RendrerManager()\r\n\r\n\r\nfunction getWidthComponentPanel(): number | null {\r\n    const element = document.getElementById(\"component_panel\")\r\n\r\n    if (element != null) {\r\n        return Number(element.offsetWidth)\r\n    } else\r\n        return null\r\n}\r\n\r\n//генерация уникального id\r\nexport function generateId(): string {\r\n    return `f${(~~(Math.random() * 1e8)).toString(16)}`\r\n}\r\n\r\n// let arBlock: Array<IBlock> = new Array<IBlock>()\r\n\r\nconst creator: IBlockFactory = new CreatorBlock()\r\n\r\n// const originalBlocks = creator.getOriginBlock()\r\nlet fd: Array<BlockMap1> = new Array<BlockMap1>()\r\n\r\nexport const EditPanel: FC<EditPanelProps> = ({snapToGrid}) => {\r\n    const {originBlocks, blocks, loading, error} = blocksTypedSelector(state => state.blocks)\r\n    let fd: Array<BlockMap1> = new Array<BlockMap1>()\r\n    const {fetchBlocks, addBlocks, changeBlocks} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchBlocks()\r\n    }, [])\r\n\r\n\r\n\r\n    const moveBlock = useCallback(\r\n        (id: string, left: number, top: number) => {\r\n\r\n            let flag = false\r\n            //проверка - блок добавляется с панели перечисления\r\n            // возможных компонентов (Component Panel) или\r\n            //пепетаскивается существующий на панели редактирования блок\r\n           if (blocks.length === 0 ) flag = true\r\n            else blocks.forEach(item => {\r\n                if(item.getId()?.localeCompare(id)){\r\n                    console.log(\"flag \" + id + \" \" + item.getId())\r\n                    flag = true\r\n                }\r\n           })\r\n\r\n\r\n            if (flag) {\r\n                //создаем новый id для добавляемого блока\r\n                console.log(\"реакция\")\r\n                let idNew: string = generateId()\r\n                addBlocks(creator.createBlock(\r\n                    originBlocks[Number(id)].getTypeBlock(),\r\n                    left - getWidthComponentPanel()!!,\r\n                    top,\r\n                    idNew\r\n                )!!)\r\n            } else {\r\n                //перетаскиваем блок\r\n                changeBlocks(id, left, top)\r\n            }\r\n        },\r\n        [blocks],\r\n\r\n    )\r\n\r\n    const [, drop] = useDrop({\r\n        accept: ItemTypes.BLOCK,\r\n        drop(item: DragItem, monitor) {\r\n            const delta = monitor.getDifferenceFromInitialOffset() as {\r\n                x: number\r\n                y: number\r\n            }\r\n\r\n            let left = Math.round(item.left + delta.x)\r\n            let top = Math.round(item.top + delta.y)\r\n\r\n            if (snapToGrid) {\r\n                ;[left, top] = doSnapToGrid(left, top)\r\n            }\r\n            moveBlock(item.id, left, top)\r\n            return undefined\r\n        },\r\n    })\r\n\r\n    if(loading){\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n\r\n    if(error){\r\n        return <h1>{error}</h1>\r\n    }\r\n\r\n    fd = renderManager.convert(blocks)\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div ref={drop} style={styles}>\r\n                {Object.keys(fd).map((id) => renderManager.renders(fd[Number(id)], id))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx",["133","134","135","136","137","138"],"import {CSSProperties, useEffect} from \"react\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {BlockMap1, RendrerManager} from \"../dnd/RendrerManager\";\r\nimport {blockReducer} from \"../../store/reducers/blockReducer\";\r\nimport {blocksTypedSelector} from \"../../hooks/blocksTypedSelector\";\r\nimport {useActions} from \"../../hooks/blockActions\";\r\nimport {fetchBlocks, fetchOriginalBlocks} from \"../../store/action-creators/blocks\";\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"left\",\r\n    height: 400,\r\n    width: \"20%\",\r\n    backgroundColor: 'darkgray',\r\n}\r\n\r\nconst renderManager = new RendrerManager()\r\n\r\nexport const ComponentPanel = () => {\r\n    const {originBlocks, loading, error} = blocksTypedSelector(state => state.blocks)\r\n    let fd: Array<BlockMap1> = renderManager.convert(originBlocks)\r\n    const {fetchOriginalBlocks} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchOriginalBlocks()\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n\r\n    if(error){\r\n        return <h1>{error}</h1>\r\n    }\r\n\r\n    return (\r\n        <div id={\"component_panel\"} style={styles}>\r\n            {Object.keys(fd).map((id) => renderManager.renders(fd[Number(id)], id))}\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\SubroutineBlockEx.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\BlockTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\ParentBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\ConditionBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\factory\\originBlocks.tsx",[],["139","140"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\CustomDragLayer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\BlockDragPreview.tsx",["141"],"import {CSSProperties, FC, memo, useEffect, useState} from \"react\";\r\n\r\n/**\r\n * Рисует блок при dnd\r\n */\r\nconst styles: CSSProperties = {\r\n    display: 'inline-block',\r\n    transform: 'rotate(-7deg)',\r\n    WebkitTransform: 'rotate(-7deg)',\r\n}\r\n\r\nexport interface BlockDragPreviewProps {\r\n    title: string\r\n    typeBlock: string\r\n}\r\n\r\nexport const BlockDragPreview: FC<BlockDragPreviewProps> = memo(({title}, {typeBlock}) => {\r\n        const [tickTock, setTickTock] = useState(false)\r\n\r\n        useEffect(\r\n            function subscribeToIntervalTick() {\r\n                const interval = setInterval(() => setTickTock(!tickTock), 500)\r\n                return () => clearInterval(interval)\r\n            },\r\n            [tickTock]\r\n        )\r\n\r\n\r\n\r\n        return (\r\n            <div style={styles}>\r\n                {/*<SubroutineBlockEx title={typeBlock} yellow={tickTock} left={0} top={0}/>*/}\r\n            </div>\r\n        )\r\n    }\r\n)","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\DraggableBlock.tsx",["142"],"import {CSSProperties, FC, useEffect} from \"react\";\r\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\r\nimport {ItemTypes} from \"../ItemTypes\";\r\nimport {getEmptyImage} from \"react-dnd-html5-backend\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {IBlock} from \"../blocks/primitives/IBlock\";\r\n\r\nfunction getStyles(\r\n    left: number,\r\n    top: number,\r\n    isDragging: boolean\r\n): CSSProperties {\r\n    const transform = `translate3d(${left}px, ${top}px, 0)`\r\n    return {\r\n        position: 'absolute',\r\n        transform,\r\n        WebkitTransform: transform,\r\n        // IE fallback: hide the real node using CSS when dragging\r\n        // because IE will ignore our custom \"empty image\" drag preview.\r\n        opacity: isDragging ? 0 : 1,\r\n        height: isDragging ? 0 : '',\r\n    }\r\n}\r\n\r\nexport interface DraggableBlockProps {\r\n    id: string\r\n    title: string\r\n    left: number\r\n    top: number\r\n    typeBlock: string\r\n}\r\n\r\nfunction selectTypeBlock(\r\n    typeBlock: string, title: string, left: number, top: number, id: string\r\n): IBlock | undefined {\r\n    const blockFactory: IBlockFactory = new CreatorBlock()\r\n    return blockFactory.createBlock(typeBlock, left, top, id)\r\n}\r\n\r\nexport const DraggableBlock: FC<DraggableBlockProps> = (props) => {\r\n    const {left, top, title, typeBlock, id} = props\r\n\r\n    const [{isDragging}, drag, preview] = useDrag({\r\n        item: {type: ItemTypes.BLOCK, left, top, title, typeBlock, id},\r\n        collect: (monitor: DragSourceMonitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), {captureDraggingState: true})\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n            {selectTypeBlock(typeBlock, title, left, top, id)?.render()}\r\n        </div>\r\n    )\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\snapToGrid.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\dnd\\RendrerManager.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\primitives\\IBlock.tsx",["143"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\factory\\CreatorBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\index.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\blockReducer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\actions.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\index.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\hooks\\blocksTypedSelector.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\hooks\\blockActions.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\index.ts",["144"],"import * as BlockActionCreator from './blocks'\r\n\r\nexport default {\r\n    ...BlockActionCreator,\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\blocks.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\assets\\errorMessadges.tsx",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":17,"column":11,"nodeType":"151","messageId":"152","endLine":17,"endColumn":42},{"ruleId":"149","severity":1,"message":"153","line":21,"column":11,"nodeType":"151","messageId":"152","endLine":21,"endColumn":46},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"154","line":1,"column":52,"nodeType":"151","messageId":"152","endLine":1,"endColumn":60},{"ruleId":"149","severity":1,"message":"155","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":14},{"ruleId":"149","severity":1,"message":"156","line":8,"column":9,"nodeType":"151","messageId":"152","endLine":8,"endColumn":15},{"ruleId":"149","severity":1,"message":"157","line":12,"column":9,"nodeType":"151","messageId":"152","endLine":12,"endColumn":15},{"ruleId":"149","severity":1,"message":"158","line":15,"column":9,"nodeType":"151","messageId":"152","endLine":15,"endColumn":21},{"ruleId":"149","severity":1,"message":"159","line":55,"column":5,"nodeType":"151","messageId":"152","endLine":55,"endColumn":25},{"ruleId":"160","severity":1,"message":"161","line":64,"column":8,"nodeType":"162","endLine":64,"endColumn":10,"suggestions":"163"},{"ruleId":"160","severity":1,"message":"164","line":99,"column":9,"nodeType":"162","endLine":99,"endColumn":17,"suggestions":"165"},{"ruleId":"149","severity":1,"message":"166","line":2,"column":9,"nodeType":"151","messageId":"152","endLine":2,"endColumn":22},{"ruleId":"149","severity":1,"message":"167","line":3,"column":9,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"168","line":5,"column":9,"nodeType":"151","messageId":"152","endLine":5,"endColumn":21},{"ruleId":"149","severity":1,"message":"169","line":8,"column":9,"nodeType":"151","messageId":"152","endLine":8,"endColumn":20},{"ruleId":"149","severity":1,"message":"170","line":8,"column":22,"nodeType":"151","messageId":"152","endLine":8,"endColumn":41},{"ruleId":"160","severity":1,"message":"171","line":28,"column":8,"nodeType":"162","endLine":28,"endColumn":10,"suggestions":"172"},{"ruleId":"145","replacedBy":"173"},{"ruleId":"147","replacedBy":"174"},{"ruleId":"149","severity":1,"message":"175","line":2,"column":9,"nodeType":"151","messageId":"152","endLine":2,"endColumn":26},{"ruleId":"160","severity":1,"message":"176","line":53,"column":8,"nodeType":"162","endLine":53,"endColumn":10,"suggestions":"177"},{"ruleId":"149","severity":1,"message":"178","line":1,"column":9,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":3,"column":1,"nodeType":"181","endLine":5,"endColumn":2},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"@typescript-eslint/no-unused-vars","'handleSnapToGridAfterDropChange' is assigned a value but never used.","Identifier","unusedVar","'handleSnapToGridWhileDraggingChange' is assigned a value but never used.","'useState' is defined but never used.","'update' is defined but never used.","'IBlock' is defined but never used.","'render' is defined but never used.","'changeBlocks' is defined but never used.","'fd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBlocks'. Either include it or remove the dependency array.","ArrayExpression",["184"],"React Hook useCallback has missing dependencies: 'addBlocks', 'changeBlocks', and 'originBlocks'. Either include them or remove the dependency array.",["185"],"'IBlockFactory' is defined but never used.","'CreatorBlock' is defined but never used.","'blockReducer' is defined but never used.","'fetchBlocks' is defined but never used.","'fetchOriginalBlocks' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchBlocks' and 'fetchOriginalBlocks'. Either include them or remove the dependency array.",["186"],["182"],["183"],"'SubroutineBlockEx' is defined but never used.","React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.",["187"],"'BlockProps' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [fetchBlocks]",{"range":"196","text":"197"},"Update the dependencies array to be: [addBlocks, blocks, changeBlocks, originBlocks]",{"range":"198","text":"199"},"Update the dependencies array to be: [fetchBlocks, fetchOriginalBlocks]",{"range":"200","text":"201"},"Update the dependencies array to be: [preview]",{"range":"202","text":"203"},[2002,2004],"[fetchBlocks]",[3175,3183],"[addBlocks, blocks, changeBlocks, originBlocks]",[1050,1052],"[fetchBlocks, fetchOriginalBlocks]",[1744,1746],"[preview]"]