[{"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js":"1","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js":"2","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\index.ts":"3","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\blocks.tsx":"4","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\index.ts":"5","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\assets\\errorMessadges.tsx":"6","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\index.ts":"7","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\blockReducer.tsx":"8","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\actions.tsx":"9","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\EditorApp.tsx":"10","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\panel\\EditPanel.tsx":"11","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\panel\\ComponentPanel.tsx":"12","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\error\\ErrorMessage.tsx":"13","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\CustomDragLayer.tsx":"14","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\ItemTypes.ts":"15","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\snapToGrid.ts":"16","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\RendrerManager.tsx":"17","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\BlockDragPreview.tsx":"18","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\hooks\\blocksTypedSelector.tsx":"19","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\hooks\\blockActions.tsx":"20","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\factory\\CreatorBlock.tsx":"21","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\DraggableBlock.tsx":"22","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\BlockTypes.ts":"23","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\SubroutineBlockEx.tsx":"24","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\ConditionBlock.tsx":"25","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\ParentBlock.tsx":"26","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\clickOnBlocks.ts":"27","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\CanvasPainter.tsx":"28","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\ConnectionBlocks.tsx":"29","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\drawConnection.tsx":"30"},{"size":387,"mtime":1617690636285,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":199,"mtime":1616745806353,"results":"34","hashOfConfig":"32"},{"size":7405,"mtime":1617958331759,"results":"35","hashOfConfig":"32"},{"size":97,"mtime":1616745806352,"results":"36","hashOfConfig":"32"},{"size":366,"mtime":1616745806327,"results":"37","hashOfConfig":"32"},{"size":220,"mtime":1616745806354,"results":"38","hashOfConfig":"32"},{"size":1167,"mtime":1617690636289,"results":"39","hashOfConfig":"32"},{"size":340,"mtime":1617690636288,"results":"40","hashOfConfig":"32"},{"size":1698,"mtime":1617951090631,"results":"41","hashOfConfig":"32"},{"size":4386,"mtime":1617949455506,"results":"42","hashOfConfig":"32"},{"size":1439,"mtime":1617690636327,"results":"43","hashOfConfig":"32"},{"size":1738,"mtime":1617690636281,"results":"44","hashOfConfig":"32"},{"size":2113,"mtime":1617690636333,"results":"45","hashOfConfig":"32"},{"size":50,"mtime":1617690636331,"results":"46","hashOfConfig":"32"},{"size":196,"mtime":1617690636329,"results":"47","hashOfConfig":"32"},{"size":1358,"mtime":1617690636330,"results":"48","hashOfConfig":"32"},{"size":955,"mtime":1617690636334,"results":"49","hashOfConfig":"32"},{"size":201,"mtime":1617690636328,"results":"50","hashOfConfig":"32"},{"size":277,"mtime":1617690636328,"results":"51","hashOfConfig":"32"},{"size":1213,"mtime":1617690636341,"results":"52","hashOfConfig":"32"},{"size":1931,"mtime":1617690636331,"results":"53","hashOfConfig":"32"},{"size":394,"mtime":1617690636338,"results":"54","hashOfConfig":"32"},{"size":1761,"mtime":1617690636335,"results":"55","hashOfConfig":"32"},{"size":2197,"mtime":1617690636337,"results":"56","hashOfConfig":"32"},{"size":4290,"mtime":1617690636336,"results":"57","hashOfConfig":"32"},{"size":55,"mtime":1617690636287,"results":"58","hashOfConfig":"32"},{"size":705,"mtime":1617954567374,"results":"59","hashOfConfig":"32"},{"size":691,"mtime":1617954398261,"results":"60","hashOfConfig":"32"},{"size":722,"mtime":1617954398254,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"jcib30",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js",[],["128","129"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\index.ts",[],["130","131"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\blocks.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\index.ts",["132"],"import * as BlockActionCreator from './blocks'\r\n\r\nexport default {\r\n    ...BlockActionCreator,\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\assets\\errorMessadges.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\index.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\blockReducer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\actions.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\EditorApp.tsx",["133","134"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\panel\\EditPanel.tsx",["135","136","137"],"import {CSSProperties, FC, useCallback, useEffect} from \"react\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport {ItemTypes} from \"../dnd/ItemTypes\";\r\nimport {DragItem} from \"../dnd/DragItem\";\r\nimport {snapToGrid as doSnapToGrid} from '../dnd/snapToGrid'\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {BlockMap1, RendrerManager} from \"../dnd/RendrerManager\";\r\nimport {blocksTypedSelector} from \"../hooks/blocksTypedSelector\";\r\nimport {useActions} from \"../hooks/blockActions\";\r\nimport {changeBlocks, checkCoordinatesBlock} from \"../../../store/action-creators/blocks\";\r\nimport {CanvasPainter} from \"../connections/CanvasPainter\";\r\n\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"right\",\r\n    width: \"79%\",\r\n    height: 400,\r\n    border: '1px solid black',\r\n    backgroundColor: 'aqua'\r\n    // position: 'relative',\r\n}\r\n\r\n\r\nexport interface EditPanelProps {\r\n    snapToGrid: boolean\r\n}\r\n\r\n/**\r\n * изменить координаты left в зависимости от ширины\r\n * панели компонентов (панель с original Blocks)\r\n */\r\nfunction getWidthComponentPanel(): number | null {\r\n    const element = document.getElementById(\"component_panel\")\r\n    if (element != null) {\r\n        return Number(element.offsetWidth)\r\n    } else\r\n        return null\r\n}\r\n\r\n//генерация уникального id\r\nexport function generateId(): string {\r\n    return `f${(~~(Math.random() * 1e8)).toString(16)}`\r\n}\r\n\r\n//приводит получаемые объекты к виду, пригодному для отображения\r\nconst renderManager = new RendrerManager()\r\n//создает новые блоки\r\nconst creator: IBlockFactory = new CreatorBlock()\r\n\r\nexport const EditPanel: FC<EditPanelProps> = ({snapToGrid}) => {\r\n    const {originBlocks, blocks, loading, error} = blocksTypedSelector(state => state.blocks)\r\n    let renderBlocks: Array<BlockMap1> = renderManager.convert(blocks)\r\n    const {fetchBlocks, addBlocks, changeBlocks} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchBlocks()\r\n    }, [])\r\n\r\n\r\n    /**\r\n     * переместить блок или создать блок\r\n     */\r\n    const moveBlock = useCallback(\r\n        (id: string, left: number, top: number) => {\r\n            //проверка - блок добавляется с панели перечисления\r\n            // возможных компонентов (Component Panel) или\r\n            //пепетаскивается существующий на панели редактирования блок\r\n            if (originBlocks[Number(id)] !== undefined) {\r\n                //создаем новый id для добавляемого блока\r\n                let idNew: string = generateId()\r\n                addBlocks(creator.createBlock(\r\n                    originBlocks[Number(id)].getTypeBlock(),\r\n                    left - getWidthComponentPanel()!!,\r\n                    top,\r\n                    idNew\r\n                )!!)\r\n            } else {\r\n                if (!checkCoordinatesBlock(id, left, top))\r\n                    //перетаскиваем блок\r\n                    changeBlocks(id, left, top)\r\n            }\r\n        },\r\n        [addBlocks, changeBlocks, originBlocks],\r\n    )\r\n\r\n\r\n    /**\r\n     * реакция на dnd\r\n     */\r\n    const [, drop] = useDrop({\r\n        accept: ItemTypes.BLOCK,\r\n        drop(item: DragItem, monitor) {\r\n            const delta = monitor.getDifferenceFromInitialOffset() as {\r\n                x: number\r\n                y: number\r\n            }\r\n\r\n            let left = Math.round(item.left + delta.x)\r\n            let top = Math.round(item.top + delta.y)\r\n\r\n            if (snapToGrid) {\r\n                ;[left, top] = doSnapToGrid(left, top)\r\n            }\r\n\r\n            moveBlock(item.id, left, top)\r\n\r\n            return undefined\r\n        },\r\n    })\r\n\r\n\r\n    if (loading) {\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <div ref={drop} style={styles}>\r\n                    {Object.keys(renderBlocks).map((id) =>\r\n                        renderManager.renders(renderBlocks[Number(id)], id))}\r\n                        <CanvasPainter/>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\panel\\ComponentPanel.tsx",["138","139","140","141","142","143","144","145"],"import {CSSProperties, useEffect} from \"react\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {BlockMap1, RendrerManager} from \"../dnd/RendrerManager\";\r\nimport {blockReducer} from \"../../../store/reducers/blockReducer\";\r\nimport {blocksTypedSelector} from \"../hooks/blocksTypedSelector\";\r\nimport {useActions} from \"../hooks/blockActions\";\r\nimport {fetchBlocks, fetchOriginalBlocks} from \"../../../store/action-creators/blocks\";\r\nimport {ErrorMessage} from \"../error/ErrorMessage\";\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"left\",\r\n    height: 400,\r\n    width: \"20%\",\r\n    backgroundColor: 'darkgray',\r\n    display: \"flex\"\r\n}\r\n\r\nconst renderManager = new RendrerManager()\r\n\r\nexport const ComponentPanel = () => {\r\n    const {originBlocks, loading, error} = blocksTypedSelector(state => state.blocks)\r\n    let fd: Array<BlockMap1> = renderManager.convert(originBlocks)\r\n    const {fetchOriginalBlocks} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchOriginalBlocks()\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n\r\n    // if(error){\r\n    //     return <ErrorMessage message={error}/>\r\n    // }\r\n\r\n    return (\r\n        <div id={\"component_panel\"} style={styles}>\r\n            {Object.keys(fd).map((id) => renderManager.renders(fd[Number(id)], id))}\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\error\\ErrorMessage.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\CustomDragLayer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\ItemTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\snapToGrid.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\RendrerManager.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\BlockDragPreview.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\hooks\\blocksTypedSelector.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\hooks\\blockActions.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\factory\\CreatorBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\DraggableBlock.tsx",["146"],"import {CSSProperties, FC, useEffect} from \"react\";\r\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\r\nimport {ItemTypes} from \"./ItemTypes\";\r\nimport {getEmptyImage} from \"react-dnd-html5-backend\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {IBlock} from \"../blocks/primitives/IBlock\";\r\n\r\nfunction getStyles(\r\n    left: number,\r\n    top: number,\r\n    isDragging: boolean\r\n): CSSProperties {\r\n    const transform = `translate3d(${left}px, ${top}px, 0)`\r\n    return {\r\n        position: 'absolute',\r\n        transform,\r\n        WebkitTransform: transform,\r\n        // IE fallback: hide the real node using CSS when dragging\r\n        // because IE will ignore our custom \"empty image\" drag preview.\r\n        opacity: isDragging ? 0 : 1,\r\n        height: isDragging ? 0 : '',\r\n    }\r\n}\r\n\r\nexport interface DraggableBlockProps {\r\n    id: string\r\n    title: string\r\n    left: number\r\n    top: number\r\n    typeBlock: string\r\n}\r\n\r\nfunction selectTypeBlock(\r\n    typeBlock: string, title: string, left: number, top: number, id: string\r\n): IBlock | undefined {\r\n    const blockFactory: IBlockFactory = new CreatorBlock()\r\n    return blockFactory.createBlock(typeBlock, left, top, id)\r\n}\r\n\r\nexport const DraggableBlock: FC<DraggableBlockProps> = (props) => {\r\n    const {left, top, title, typeBlock, id} = props\r\n\r\n    const [{isDragging}, drag, preview] = useDrag({\r\n        item: {type: ItemTypes.BLOCK, left, top, title, typeBlock, id},\r\n        collect: (monitor: DragSourceMonitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), {captureDraggingState: true})\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n            {selectTypeBlock(typeBlock, title, left, top, id)?.render()}\r\n        </div>\r\n    )\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\BlockTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\SubroutineBlockEx.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\ConditionBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\ParentBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\clickOnBlocks.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\CanvasPainter.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\ConnectionBlocks.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\drawConnection.tsx",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":3,"column":1,"nodeType":"153","endLine":5,"endColumn":2},{"ruleId":"154","severity":1,"message":"155","line":17,"column":11,"nodeType":"156","messageId":"157","endLine":17,"endColumn":42},{"ruleId":"154","severity":1,"message":"158","line":21,"column":11,"nodeType":"156","messageId":"157","endLine":21,"endColumn":46},{"ruleId":"154","severity":1,"message":"159","line":11,"column":9,"nodeType":"156","messageId":"157","endLine":11,"endColumn":21},{"ruleId":"154","severity":1,"message":"160","line":53,"column":43,"nodeType":"156","messageId":"157","endLine":53,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":59,"column":8,"nodeType":"163","endLine":59,"endColumn":10,"suggestions":"164"},{"ruleId":"154","severity":1,"message":"165","line":2,"column":9,"nodeType":"156","messageId":"157","endLine":2,"endColumn":22},{"ruleId":"154","severity":1,"message":"166","line":3,"column":9,"nodeType":"156","messageId":"157","endLine":3,"endColumn":21},{"ruleId":"154","severity":1,"message":"167","line":5,"column":9,"nodeType":"156","messageId":"157","endLine":5,"endColumn":21},{"ruleId":"154","severity":1,"message":"168","line":8,"column":9,"nodeType":"156","messageId":"157","endLine":8,"endColumn":20},{"ruleId":"154","severity":1,"message":"169","line":8,"column":22,"nodeType":"156","messageId":"157","endLine":8,"endColumn":41},{"ruleId":"154","severity":1,"message":"170","line":9,"column":9,"nodeType":"156","messageId":"157","endLine":9,"endColumn":21},{"ruleId":"154","severity":1,"message":"160","line":23,"column":35,"nodeType":"156","messageId":"157","endLine":23,"endColumn":40},{"ruleId":"161","severity":1,"message":"171","line":29,"column":8,"nodeType":"163","endLine":29,"endColumn":10,"suggestions":"172"},{"ruleId":"161","severity":1,"message":"173","line":53,"column":8,"nodeType":"163","endLine":53,"endColumn":10,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'handleSnapToGridAfterDropChange' is assigned a value but never used.","Identifier","unusedVar","'handleSnapToGridWhileDraggingChange' is assigned a value but never used.","'changeBlocks' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBlocks'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'IBlockFactory' is defined but never used.","'CreatorBlock' is defined but never used.","'blockReducer' is defined but never used.","'fetchBlocks' is defined but never used.","'fetchOriginalBlocks' is defined but never used.","'ErrorMessage' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchOriginalBlocks'. Either include it or remove the dependency array.",["178"],"React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [fetchBlocks]",{"range":"186","text":"187"},"Update the dependencies array to be: [fetchOriginalBlocks]",{"range":"188","text":"189"},"Update the dependencies array to be: [preview]",{"range":"190","text":"191"},[2005,2007],"[fetchBlocks]",[1088,1090],"[fetchOriginalBlocks]",[1743,1745],"[preview]"]