[{"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js":"1","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js":"2","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx":"3","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\CustomDragLayer.tsx":"4","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx":"5","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx":"6","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\snapToGrid.ts":"7","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts":"8","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockDragPreview.tsx":"9","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\DraggableBlock.tsx":"10","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\Block.tsx":"11"},{"size":376,"mtime":1613302676500,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1415,"mtime":1613302676487,"results":"15","hashOfConfig":"13"},{"size":2096,"mtime":1613302676495,"results":"16","hashOfConfig":"13"},{"size":3198,"mtime":1613466389981,"results":"17","hashOfConfig":"13"},{"size":957,"mtime":1613466389980,"results":"18","hashOfConfig":"13"},{"size":196,"mtime":1613302676499,"results":"19","hashOfConfig":"13"},{"size":50,"mtime":1613302676535,"results":"20","hashOfConfig":"13"},{"size":861,"mtime":1613302676491,"results":"21","hashOfConfig":"13"},{"size":1457,"mtime":1613302676492,"results":"22","hashOfConfig":"13"},{"size":420,"mtime":1613302676490,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jcib30",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\EditorApp.tsx",["47","48"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\CustomDragLayer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\EditPanel.tsx",["49"],"import {CSSProperties, FC, useCallback, useState} from \"react\";\r\nimport {DraggableBlock} from \"../blocks/DraggableBlock\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport {ItemTypes} from \"../ItemTypes\";\r\nimport {DragItem} from \"../DragItem\";\r\nimport {snapToGrid as doSnapToGrid} from '../snapToGrid'\r\nimport {originalBlocks} from \"./ComponentPanel\";\r\nimport update from \"immutability-helper\";\r\n\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"right\",\r\n    width: \"79%\",\r\n    height: 400,\r\n    border: '1px solid black',\r\n    backgroundColor: 'aqua'\r\n    // position: 'relative',\r\n}\r\n\r\nexport interface EditPanelProps {\r\n    snapToGrid: boolean\r\n}\r\n\r\n//интерфейс для списка имеющихся для отображения блоков\r\nexport interface BlockMap {\r\n    [key: string]: { top: number; left: number; title: string }\r\n}\r\n\r\n//отображает перетаскиваемые блоки\r\nexport function renderBlock(item: any, key: any) {\r\n    return <DraggableBlock key={key} id={key} {...item} />\r\n}\r\n\r\n\r\nexport const EditPanel: FC<EditPanelProps> = ({snapToGrid}) => {\r\n    const [blocks, setBlocks] = useState<BlockMap>({\r\n        // a: {top: 20, left: 80, title: 'Drag me around'},\r\n        // b: {top: 180, left: 20, title: 'Drag me too'},\r\n    })\r\n\r\n    const moveBlock = useCallback(\r\n        (id: string, left: number, top: number) => {\r\n            let flag = false\r\n\r\n            Object.keys(originalBlocks).map((key) => {\r\n                    if (!key.localeCompare(id)) {\r\n                        flag = true\r\n                    }\r\n                }\r\n            )\r\n\r\n            let idS: string = \"ex\" + top\r\n            let addingBlock: BlockMap = {[idS]: {top: top, left: left, title: 'New block'}}\r\n\r\n            console.log(\"id \" + id)\r\n            if (flag) {\r\n                setBlocks(\r\n                    addingBlock\r\n                    // update(blocks, {\r\n                    //         $add: addingBlock,\r\n                    //     }\r\n                    // )\r\n                )\r\n            } else {\r\n                setBlocks(\r\n                    update(blocks, {\r\n                        [id]: {\r\n                            $merge: {left, top},\r\n                        },\r\n                    }),\r\n                )\r\n            }\r\n\r\n\r\n        },\r\n        [blocks],\r\n    )\r\n\r\n    const [, drop] = useDrop({\r\n        accept: ItemTypes.BLOCK,\r\n        drop(item: DragItem, monitor) {\r\n            const delta = monitor.getDifferenceFromInitialOffset() as {\r\n                x: number\r\n                y: number\r\n            }\r\n\r\n            let left = Math.round(item.left + delta.x)\r\n            let top = Math.round(item.top + delta.y)\r\n\r\n            if (snapToGrid) {\r\n                ;[left, top] = doSnapToGrid(left, top)\r\n            }\r\n\r\n            moveBlock(item.id, left, top)\r\n            return undefined\r\n        },\r\n    })\r\n\r\n    for (var d in blocks) {\r\n        console.log(\"value \" + d + \" \")\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div ref={drop} style={styles}>\r\n                {Object.keys(blocks).map((key) => renderBlock(blocks[key], key))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\panel\\ComponentPanel.tsx",["50","51","52","53","54","55","56","57","58","59"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\snapToGrid.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\ItemTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\BlockDragPreview.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\DraggableBlock.tsx",["60","61"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\editor\\blocks\\Block.tsx",[],{"ruleId":"62","severity":1,"message":"63","line":13,"column":11,"nodeType":"64","messageId":"65","endLine":13,"endColumn":42},{"ruleId":"62","severity":1,"message":"66","line":17,"column":11,"nodeType":"64","messageId":"65","endLine":17,"endColumn":46},{"ruleId":"67","severity":1,"message":"68","line":58,"column":51,"nodeType":"69","messageId":"70","endLine":58,"endColumn":53},{"ruleId":"62","severity":1,"message":"71","line":1,"column":9,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"62","severity":1,"message":"72","line":2,"column":9,"nodeType":"64","messageId":"65","endLine":2,"endColumn":23},{"ruleId":"62","severity":1,"message":"73","line":3,"column":24,"nodeType":"64","messageId":"65","endLine":3,"endColumn":35},{"ruleId":"62","severity":1,"message":"74","line":3,"column":37,"nodeType":"64","messageId":"65","endLine":3,"endColumn":45},{"ruleId":"62","severity":1,"message":"75","line":4,"column":9,"nodeType":"64","messageId":"65","endLine":4,"endColumn":17},{"ruleId":"62","severity":1,"message":"76","line":5,"column":9,"nodeType":"64","messageId":"65","endLine":5,"endColumn":16},{"ruleId":"62","severity":1,"message":"77","line":6,"column":9,"nodeType":"64","messageId":"65","endLine":6,"endColumn":18},{"ruleId":"62","severity":1,"message":"78","line":7,"column":9,"nodeType":"64","messageId":"65","endLine":7,"endColumn":17},{"ruleId":"62","severity":1,"message":"79","line":8,"column":23,"nodeType":"64","messageId":"65","endLine":8,"endColumn":35},{"ruleId":"62","severity":1,"message":"80","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":14},{"ruleId":"62","severity":1,"message":"76","line":2,"column":37,"nodeType":"64","messageId":"65","endLine":2,"endColumn":44},{"ruleId":"81","severity":1,"message":"82","line":43,"column":8,"nodeType":"83","endLine":43,"endColumn":10,"suggestions":"84"},"@typescript-eslint/no-unused-vars","'handleSnapToGridAfterDropChange' is assigned a value but never used.","Identifier","unusedVar","'handleSnapToGridWhileDraggingChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Col' is defined but never used.","'DraggableBlock' is defined but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'BlockMap' is defined but never used.","'useDrop' is defined but never used.","'ItemTypes' is defined but never used.","'DragItem' is defined but never used.","'doSnapToGrid' is defined but never used.","'update' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.","ArrayExpression",["85"],{"desc":"86","fix":"87"},"Update the dependencies array to be: [preview]",{"range":"88","text":"89"},[1309,1311],"[preview]"]