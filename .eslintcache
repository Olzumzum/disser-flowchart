[{"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js":"1","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js":"2","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\index.ts":"3","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\blocks.tsx":"4","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\index.ts":"5","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\assets\\errorMessadges.tsx":"6","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\index.ts":"7","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\blockReducer.tsx":"8","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\actions.tsx":"9","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\EditorApp.tsx":"10","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\panel\\EditPanel.tsx":"11","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\panel\\ComponentPanel.tsx":"12","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\error\\ErrorMessage.tsx":"13","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\CustomDragLayer.tsx":"14","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\ItemTypes.ts":"15","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\snapToGrid.ts":"16","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\RendrerManager.tsx":"17","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\BlockDragPreview.tsx":"18","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\hooks\\blocksTypedSelector.tsx":"19","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\hooks\\blockActions.tsx":"20","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\factory\\CreatorBlock.tsx":"21","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\DraggableBlock.tsx":"22","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\BlockTypes.ts":"23","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\SubroutineBlockEx.tsx":"24","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\ConditionBlock.tsx":"25","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\ParentBlock.tsx":"26","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\clickOnBlocks.ts":"27","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\CanvasPainter.tsx":"28","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\ConnectionBlocks.tsx":"29","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\drawConnection.tsx":"30","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\App.js":"31","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\Header.tsx":"32","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\pages\\Home.tsx":"33","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\pages\\Help.tsx":"34","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\pages\\File_s.tsx":"35","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\Toolbar.tsx":"36"},{"size":563,"mtime":1617963150996,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":199,"mtime":1616745806353,"results":"40","hashOfConfig":"38"},{"size":7405,"mtime":1617958331759,"results":"41","hashOfConfig":"38"},{"size":97,"mtime":1616745806352,"results":"42","hashOfConfig":"38"},{"size":366,"mtime":1616745806327,"results":"43","hashOfConfig":"38"},{"size":220,"mtime":1616745806354,"results":"44","hashOfConfig":"38"},{"size":1167,"mtime":1617690636289,"results":"45","hashOfConfig":"38"},{"size":340,"mtime":1617690636288,"results":"46","hashOfConfig":"38"},{"size":1715,"mtime":1617963288983,"results":"47","hashOfConfig":"38"},{"size":4386,"mtime":1617949455506,"results":"48","hashOfConfig":"38"},{"size":1439,"mtime":1617690636327,"results":"49","hashOfConfig":"38"},{"size":1738,"mtime":1617690636281,"results":"50","hashOfConfig":"38"},{"size":2113,"mtime":1617690636333,"results":"51","hashOfConfig":"38"},{"size":50,"mtime":1617690636331,"results":"52","hashOfConfig":"38"},{"size":196,"mtime":1617690636329,"results":"53","hashOfConfig":"38"},{"size":1358,"mtime":1617690636330,"results":"54","hashOfConfig":"38"},{"size":955,"mtime":1617690636334,"results":"55","hashOfConfig":"38"},{"size":201,"mtime":1617690636328,"results":"56","hashOfConfig":"38"},{"size":277,"mtime":1617690636328,"results":"57","hashOfConfig":"38"},{"size":1213,"mtime":1617690636341,"results":"58","hashOfConfig":"38"},{"size":1931,"mtime":1617690636331,"results":"59","hashOfConfig":"38"},{"size":394,"mtime":1617690636338,"results":"60","hashOfConfig":"38"},{"size":1761,"mtime":1617690636335,"results":"61","hashOfConfig":"38"},{"size":2197,"mtime":1617690636337,"results":"62","hashOfConfig":"38"},{"size":4290,"mtime":1617690636336,"results":"63","hashOfConfig":"38"},{"size":55,"mtime":1617690636287,"results":"64","hashOfConfig":"38"},{"size":705,"mtime":1617954567374,"results":"65","hashOfConfig":"38"},{"size":691,"mtime":1617954398261,"results":"66","hashOfConfig":"38"},{"size":722,"mtime":1617954398254,"results":"67","hashOfConfig":"38"},{"size":577,"mtime":1617963151024,"results":"68","hashOfConfig":"38"},{"size":2009,"mtime":1617963151035,"results":"69","hashOfConfig":"38"},{"size":478,"mtime":1617963150986,"results":"70","hashOfConfig":"38"},{"size":525,"mtime":1617963151005,"results":"71","hashOfConfig":"38"},{"size":2522,"mtime":1617963151015,"results":"72","hashOfConfig":"38"},{"size":784,"mtime":1617963195577,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jcib30",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"81"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\index.js",["153","154"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\reportWebVitals.js",[],["155","156"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\index.ts",[],["157","158"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\blocks.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\index.ts",["159"],"import * as BlockActionCreator from './blocks'\r\n\r\nexport default {\r\n    ...BlockActionCreator,\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\assets\\errorMessadges.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\index.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\reducers\\blockReducer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\actions.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\EditorApp.tsx",["160","161"],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\panel\\EditPanel.tsx",["162","163","164"],"import {CSSProperties, FC, useCallback, useEffect} from \"react\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport {ItemTypes} from \"../dnd/ItemTypes\";\r\nimport {DragItem} from \"../dnd/DragItem\";\r\nimport {snapToGrid as doSnapToGrid} from '../dnd/snapToGrid'\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {BlockMap1, RendrerManager} from \"../dnd/RendrerManager\";\r\nimport {blocksTypedSelector} from \"../hooks/blocksTypedSelector\";\r\nimport {useActions} from \"../hooks/blockActions\";\r\nimport {changeBlocks, checkCoordinatesBlock} from \"../../../store/action-creators/blocks\";\r\nimport {CanvasPainter} from \"../connections/CanvasPainter\";\r\n\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"right\",\r\n    width: \"79%\",\r\n    height: 400,\r\n    border: '1px solid black',\r\n    backgroundColor: 'aqua'\r\n    // position: 'relative',\r\n}\r\n\r\n\r\nexport interface EditPanelProps {\r\n    snapToGrid: boolean\r\n}\r\n\r\n/**\r\n * изменить координаты left в зависимости от ширины\r\n * панели компонентов (панель с original Blocks)\r\n */\r\nfunction getWidthComponentPanel(): number | null {\r\n    const element = document.getElementById(\"component_panel\")\r\n    if (element != null) {\r\n        return Number(element.offsetWidth)\r\n    } else\r\n        return null\r\n}\r\n\r\n//генерация уникального id\r\nexport function generateId(): string {\r\n    return `f${(~~(Math.random() * 1e8)).toString(16)}`\r\n}\r\n\r\n//приводит получаемые объекты к виду, пригодному для отображения\r\nconst renderManager = new RendrerManager()\r\n//создает новые блоки\r\nconst creator: IBlockFactory = new CreatorBlock()\r\n\r\nexport const EditPanel: FC<EditPanelProps> = ({snapToGrid}) => {\r\n    const {originBlocks, blocks, loading, error} = blocksTypedSelector(state => state.blocks)\r\n    let renderBlocks: Array<BlockMap1> = renderManager.convert(blocks)\r\n    const {fetchBlocks, addBlocks, changeBlocks} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchBlocks()\r\n    }, [])\r\n\r\n\r\n    /**\r\n     * переместить блок или создать блок\r\n     */\r\n    const moveBlock = useCallback(\r\n        (id: string, left: number, top: number) => {\r\n            //проверка - блок добавляется с панели перечисления\r\n            // возможных компонентов (Component Panel) или\r\n            //пепетаскивается существующий на панели редактирования блок\r\n            if (originBlocks[Number(id)] !== undefined) {\r\n                //создаем новый id для добавляемого блока\r\n                let idNew: string = generateId()\r\n                addBlocks(creator.createBlock(\r\n                    originBlocks[Number(id)].getTypeBlock(),\r\n                    left - getWidthComponentPanel()!!,\r\n                    top,\r\n                    idNew\r\n                )!!)\r\n            } else {\r\n                if (!checkCoordinatesBlock(id, left, top))\r\n                    //перетаскиваем блок\r\n                    changeBlocks(id, left, top)\r\n            }\r\n        },\r\n        [addBlocks, changeBlocks, originBlocks],\r\n    )\r\n\r\n\r\n    /**\r\n     * реакция на dnd\r\n     */\r\n    const [, drop] = useDrop({\r\n        accept: ItemTypes.BLOCK,\r\n        drop(item: DragItem, monitor) {\r\n            const delta = monitor.getDifferenceFromInitialOffset() as {\r\n                x: number\r\n                y: number\r\n            }\r\n\r\n            let left = Math.round(item.left + delta.x)\r\n            let top = Math.round(item.top + delta.y)\r\n\r\n            if (snapToGrid) {\r\n                ;[left, top] = doSnapToGrid(left, top)\r\n            }\r\n\r\n            moveBlock(item.id, left, top)\r\n\r\n            return undefined\r\n        },\r\n    })\r\n\r\n\r\n    if (loading) {\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <div ref={drop} style={styles}>\r\n                    {Object.keys(renderBlocks).map((id) =>\r\n                        renderManager.renders(renderBlocks[Number(id)], id))}\r\n                        <CanvasPainter/>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\panel\\ComponentPanel.tsx",["165","166","167","168","169","170","171","172"],"import {CSSProperties, useEffect} from \"react\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {BlockMap1, RendrerManager} from \"../dnd/RendrerManager\";\r\nimport {blockReducer} from \"../../../store/reducers/blockReducer\";\r\nimport {blocksTypedSelector} from \"../hooks/blocksTypedSelector\";\r\nimport {useActions} from \"../hooks/blockActions\";\r\nimport {fetchBlocks, fetchOriginalBlocks} from \"../../../store/action-creators/blocks\";\r\nimport {ErrorMessage} from \"../error/ErrorMessage\";\r\n\r\nconst styles: CSSProperties = {\r\n    margin: 0,\r\n    float: \"left\",\r\n    height: 400,\r\n    width: \"20%\",\r\n    backgroundColor: 'darkgray',\r\n    display: \"flex\"\r\n}\r\n\r\nconst renderManager = new RendrerManager()\r\n\r\nexport const ComponentPanel = () => {\r\n    const {originBlocks, loading, error} = blocksTypedSelector(state => state.blocks)\r\n    let fd: Array<BlockMap1> = renderManager.convert(originBlocks)\r\n    const {fetchOriginalBlocks} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchOriginalBlocks()\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n\r\n    // if(error){\r\n    //     return <ErrorMessage message={error}/>\r\n    // }\r\n\r\n    return (\r\n        <div id={\"component_panel\"} style={styles}>\r\n            {Object.keys(fd).map((id) => renderManager.renders(fd[Number(id)], id))}\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\error\\ErrorMessage.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\CustomDragLayer.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\ItemTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\snapToGrid.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\RendrerManager.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\BlockDragPreview.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\hooks\\blocksTypedSelector.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\hooks\\blockActions.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\factory\\CreatorBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\dnd\\DraggableBlock.tsx",["173"],"import {CSSProperties, FC, useEffect} from \"react\";\r\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\r\nimport {ItemTypes} from \"./ItemTypes\";\r\nimport {getEmptyImage} from \"react-dnd-html5-backend\";\r\nimport {IBlockFactory} from \"../blocks/factory/IBlockFactory\";\r\nimport {CreatorBlock} from \"../blocks/factory/CreatorBlock\";\r\nimport {IBlock} from \"../blocks/primitives/IBlock\";\r\n\r\nfunction getStyles(\r\n    left: number,\r\n    top: number,\r\n    isDragging: boolean\r\n): CSSProperties {\r\n    const transform = `translate3d(${left}px, ${top}px, 0)`\r\n    return {\r\n        position: 'absolute',\r\n        transform,\r\n        WebkitTransform: transform,\r\n        // IE fallback: hide the real node using CSS when dragging\r\n        // because IE will ignore our custom \"empty image\" drag preview.\r\n        opacity: isDragging ? 0 : 1,\r\n        height: isDragging ? 0 : '',\r\n    }\r\n}\r\n\r\nexport interface DraggableBlockProps {\r\n    id: string\r\n    title: string\r\n    left: number\r\n    top: number\r\n    typeBlock: string\r\n}\r\n\r\nfunction selectTypeBlock(\r\n    typeBlock: string, title: string, left: number, top: number, id: string\r\n): IBlock | undefined {\r\n    const blockFactory: IBlockFactory = new CreatorBlock()\r\n    return blockFactory.createBlock(typeBlock, left, top, id)\r\n}\r\n\r\nexport const DraggableBlock: FC<DraggableBlockProps> = (props) => {\r\n    const {left, top, title, typeBlock, id} = props\r\n\r\n    const [{isDragging}, drag, preview] = useDrag({\r\n        item: {type: ItemTypes.BLOCK, left, top, title, typeBlock, id},\r\n        collect: (monitor: DragSourceMonitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), {captureDraggingState: true})\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n            {selectTypeBlock(typeBlock, title, left, top, id)?.render()}\r\n        </div>\r\n    )\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\BlockTypes.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\SubroutineBlockEx.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\ConditionBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\blocks\\primitives\\ParentBlock.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\store\\action-creators\\clickOnBlocks.ts",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\CanvasPainter.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\ConnectionBlocks.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\editor\\connections\\drawConnection.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\App.js",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\Header.tsx",["174"],"import {Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport {Component} from \"react\";\r\nimport {Route, Switch, BrowserRouter as Router, Link} from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Help from \"../pages/Help\";\r\nimport File_s from \"../pages/File_s\";\r\n\r\n/**\r\n * Шапка сервиса,\r\n * здесь перечислены все возможные ссылочки сайта, оформлена шапочка\r\n */\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar collapseOnSelect expand={\"md\"} bg={\"dark\"} variant={\"dark\"}>\r\n                    <Container>\r\n                        <Navbar.Brand href=\"/\">\r\n                            <img\r\n                                // src={logo}\r\n                                height={30}\r\n                                width={30}\r\n                                className=\"d-line-block align-top\"\r\n                                alt=\"Logo\"\r\n                            />\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls={\"responsive-navbar-nav\"}/>\r\n                        <Navbar.Collapse id={\"responsive-navbar-nav\"}>\r\n                            <Nav className={\"mr-auto\"}>\r\n                                <Nav.Link href={\"/\"}>Home</Nav.Link>\r\n                                <Nav.Link href={\"/file\"}>File</Nav.Link>\r\n                                <Nav.Link href={\"/help\"}>Help</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path={\"/\"} component={Home}/>\r\n                        <Route exact path={\"/file\"} component={File_s}/>\r\n                        <Route exact path={\"/help\"} component={Help}/>\r\n                    </Switch>\r\n                </Router>\r\n            </>\r\n        );\r\n    }\r\n}","C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\pages\\Home.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\pages\\Help.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\pages\\File_s.tsx",[],"C:\\Users\\evdok\\IdeaProjects\\disser-flowchart\\src\\components\\Toolbar.tsx",[],{"ruleId":"175","severity":1,"message":"176","line":3,"column":9,"nodeType":"177","messageId":"178","endLine":3,"endColumn":18},{"ruleId":"175","severity":1,"message":"179","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":12},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":3,"column":1,"nodeType":"186","endLine":5,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":18,"column":11,"nodeType":"177","messageId":"178","endLine":18,"endColumn":42},{"ruleId":"187","severity":1,"message":"189","line":22,"column":11,"nodeType":"177","messageId":"178","endLine":22,"endColumn":46},{"ruleId":"187","severity":1,"message":"190","line":11,"column":9,"nodeType":"177","messageId":"178","endLine":11,"endColumn":21},{"ruleId":"187","severity":1,"message":"191","line":53,"column":43,"nodeType":"177","messageId":"178","endLine":53,"endColumn":48},{"ruleId":"192","severity":1,"message":"193","line":59,"column":8,"nodeType":"194","endLine":59,"endColumn":10,"suggestions":"195"},{"ruleId":"187","severity":1,"message":"196","line":2,"column":9,"nodeType":"177","messageId":"178","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"197","line":3,"column":9,"nodeType":"177","messageId":"178","endLine":3,"endColumn":21},{"ruleId":"187","severity":1,"message":"198","line":5,"column":9,"nodeType":"177","messageId":"178","endLine":5,"endColumn":21},{"ruleId":"187","severity":1,"message":"199","line":8,"column":9,"nodeType":"177","messageId":"178","endLine":8,"endColumn":20},{"ruleId":"187","severity":1,"message":"200","line":8,"column":22,"nodeType":"177","messageId":"178","endLine":8,"endColumn":41},{"ruleId":"187","severity":1,"message":"201","line":9,"column":9,"nodeType":"177","messageId":"178","endLine":9,"endColumn":21},{"ruleId":"187","severity":1,"message":"191","line":23,"column":35,"nodeType":"177","messageId":"178","endLine":23,"endColumn":40},{"ruleId":"192","severity":1,"message":"202","line":29,"column":8,"nodeType":"194","endLine":29,"endColumn":10,"suggestions":"203"},{"ruleId":"192","severity":1,"message":"204","line":53,"column":8,"nodeType":"194","endLine":53,"endColumn":10,"suggestions":"205"},{"ruleId":"187","severity":1,"message":"206","line":3,"column":49,"nodeType":"177","messageId":"178","endLine":3,"endColumn":53},"no-unused-vars","'EditorApp' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'handleSnapToGridAfterDropChange' is assigned a value but never used.","'handleSnapToGridWhileDraggingChange' is assigned a value but never used.","'changeBlocks' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBlocks'. Either include it or remove the dependency array.","ArrayExpression",["209"],"'IBlockFactory' is defined but never used.","'CreatorBlock' is defined but never used.","'blockReducer' is defined but never used.","'fetchBlocks' is defined but never used.","'fetchOriginalBlocks' is defined but never used.","'ErrorMessage' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchOriginalBlocks'. Either include it or remove the dependency array.",["210"],"React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.",["211"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [fetchBlocks]",{"range":"218","text":"219"},"Update the dependencies array to be: [fetchOriginalBlocks]",{"range":"220","text":"221"},"Update the dependencies array to be: [preview]",{"range":"222","text":"223"},[2005,2007],"[fetchBlocks]",[1088,1090],"[fetchOriginalBlocks]",[1743,1745],"[preview]"]